_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[7],{"1jOq":function(e,r){e.exports=function e(r,t){if(r&&t)return e(r)(t);if("function"!==typeof r)throw new TypeError("need wrapper function");return Object.keys(r).forEach((function(e){s[e]=r[e]})),s;function s(){for(var e=new Array(arguments.length),t=0;t<e.length;t++)e[t]=arguments[t];var s=r.apply(this,e),o=e[e.length-1];return"function"===typeof s&&s!==o&&Object.keys(o).forEach((function(e){s[e]=o[e]})),s}}},"5uH7":function(e,r){e.exports=function e(r,t,s,o){if("function"!==typeof s)throw new Error("method for before hook must be a function");o||(o={});if(Array.isArray(t))return t.reverse().reduce((function(t,s){return e.bind(null,r,s,t,o)}),s)();return Promise.resolve().then((function(){return r.registry[t]?r.registry[t].reduce((function(e,r){return r.hook.bind(null,e,o)}),s)():s(o)}))}},"8oxB":function(e,r){var t,s,o=e.exports={};function n(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function a(e){if(t===setTimeout)return setTimeout(e,0);if((t===n||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(r){try{return t.call(null,e,0)}catch(r){return t.call(this,e,0)}}}!function(){try{t="function"===typeof setTimeout?setTimeout:n}catch(e){t=n}try{s="function"===typeof clearTimeout?clearTimeout:i}catch(e){s=i}}();var c,p=[],u=!1,l=-1;function d(){u&&c&&(u=!1,c.length?p=c.concat(p):l=-1,p.length&&m())}function m(){if(!u){var e=a(d);u=!0;for(var r=p.length;r;){for(c=p,p=[];++l<r;)c&&c[l].run();l=-1,r=p.length}c=null,u=!1,function(e){if(s===clearTimeout)return clearTimeout(e);if((s===i||!s)&&clearTimeout)return s=clearTimeout,clearTimeout(e);try{s(e)}catch(r){try{return s.call(null,e)}catch(r){return s.call(this,e)}}}(e)}}function g(e,r){this.fun=e,this.array=r}function T(){}o.nextTick=function(e){var r=new Array(arguments.length-1);if(arguments.length>1)for(var t=1;t<arguments.length;t++)r[t-1]=arguments[t];p.push(new g(e,r)),1!==p.length||u||a(m)},g.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=T,o.addListener=T,o.once=T,o.off=T,o.removeListener=T,o.removeAllListeners=T,o.emit=T,o.prependListener=T,o.prependOnceListener=T,o.listeners=function(e){return[]},o.binding=function(e){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(e){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},D85t:function(e,r,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/projects",function(){return t("RHEb")}])},EUoV:function(e,r){e.exports=function(e,r,t,s){var o=s;e.registry[t]||(e.registry[t]=[]);"before"===r&&(s=function(e,r){return Promise.resolve().then(o.bind(null,r)).then(e.bind(null,r))});"after"===r&&(s=function(e,r){var t;return Promise.resolve().then(e.bind(null,r)).then((function(e){return o(t=e,r)})).then((function(){return t}))});"error"===r&&(s=function(e,r){return Promise.resolve().then(e.bind(null,r)).catch((function(e){return o(e,r)}))});e.registry[t].push({hook:s,orig:o})}},"R+3T":function(e,r){e.exports=function(e,r,t){if(!e.registry[r])return;var s=e.registry[r].map((function(e){return e.orig})).indexOf(t);if(-1===s)return;e.registry[r].splice(s,1)}},"R+Of":function(e,r,t){"use strict";var s=t("nKUr");r.a=function(e){var r=e.text;return Object(s.jsx)("div",{className:"tWrapper",children:Object(s.jsx)("h1",{className:"title",children:r||""})})}},RHEb:function(e,r,t){"use strict";t.r(r),t.d(r,"default",(function(){return Ae}));var s=t("nKUr"),o=t("ZHh6"),n=t("R+Of"),i=t("z6pS"),a=t("Z8pk");function c(e){return"[object Object]"===Object.prototype.toString.call(e)}function p(e){var r,t;return!1!==c(e)&&(void 0===(r=e.constructor)||!1!==c(t=r.prototype)&&!1!==t.hasOwnProperty("isPrototypeOf"))}function u(e,r){const t=Object.assign({},e);return Object.keys(r).forEach((s=>{p(r[s])?s in e?t[s]=u(e[s],r[s]):Object.assign(t,{[s]:r[s]}):Object.assign(t,{[s]:r[s]})})),t}function l(e){for(const r in e)void 0===e[r]&&delete e[r];return e}function d(e,r,t){if("string"===typeof r){let[e,s]=r.split(" ");t=Object.assign(s?{method:e,url:s}:{url:e},t)}else t=Object.assign({},r);var s;t.headers=(s=t.headers)?Object.keys(s).reduce(((e,r)=>(e[r.toLowerCase()]=s[r],e)),{}):{},l(t),l(t.headers);const o=u(e||{},t);return e&&e.mediaType.previews.length&&(o.mediaType.previews=e.mediaType.previews.filter((e=>!o.mediaType.previews.includes(e))).concat(o.mediaType.previews)),o.mediaType.previews=o.mediaType.previews.map((e=>e.replace(/-preview/,""))),o}const m=/\{[^}]+\}/g;function g(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function T(e,r){return Object.keys(e).filter((e=>!r.includes(e))).reduce(((r,t)=>(r[t]=e[t],r)),{})}function h(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map((function(e){return/%[0-9A-Fa-f]/.test(e)||(e=encodeURI(e).replace(/%5B/g,"[").replace(/%5D/g,"]")),e})).join("")}function f(e){return encodeURIComponent(e).replace(/[!'()*]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function E(e,r,t){return r="+"===e||"#"===e?h(r):f(r),t?f(t)+"="+r:r}function w(e){return void 0!==e&&null!==e}function b(e){return";"===e||"&"===e||"?"===e}function v(e,r){var t=["+","#",".","/",";","?","&"];return e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,(function(e,s,o){if(s){let e="";const o=[];if(-1!==t.indexOf(s.charAt(0))&&(e=s.charAt(0),s=s.substr(1)),s.split(/,/g).forEach((function(t){var s=/([^:\*]*)(?::(\d+)|(\*))?/.exec(t);o.push(function(e,r,t,s){var o=e[t],n=[];if(w(o)&&""!==o)if("string"===typeof o||"number"===typeof o||"boolean"===typeof o)o=o.toString(),s&&"*"!==s&&(o=o.substring(0,parseInt(s,10))),n.push(E(r,o,b(r)?t:""));else if("*"===s)Array.isArray(o)?o.filter(w).forEach((function(e){n.push(E(r,e,b(r)?t:""))})):Object.keys(o).forEach((function(e){w(o[e])&&n.push(E(r,o[e],e))}));else{const e=[];Array.isArray(o)?o.filter(w).forEach((function(t){e.push(E(r,t))})):Object.keys(o).forEach((function(t){w(o[t])&&(e.push(f(t)),e.push(E(r,o[t].toString())))})),b(r)?n.push(f(t)+"="+e.join(",")):0!==e.length&&n.push(e.join(","))}else";"===r?w(o)&&n.push(f(t)):""!==o||"&"!==r&&"?"!==r?""===o&&n.push(""):n.push(f(t)+"=");return n}(r,e,s[1],s[2]||s[3]))})),e&&"+"!==e){var n=",";return"?"===e?n="&":"#"!==e&&(n=e),(0!==o.length?e:"")+o.join(n)}return o.join(",")}return h(o)}))}function _(e){let r,t=e.method.toUpperCase(),s=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),o=Object.assign({},e.headers),n=T(e,["method","baseUrl","url","headers","request","mediaType"]);const i=function(e){const r=e.match(m);return r?r.map(g).reduce(((e,r)=>e.concat(r)),[]):[]}(s);var a;s=(a=s,{expand:v.bind(null,a)}).expand(n),/^http/.test(s)||(s=e.baseUrl+s);const c=T(n,Object.keys(e).filter((e=>i.includes(e))).concat("baseUrl"));if(!/application\/octet-stream/i.test(o.accept)&&(e.mediaType.format&&(o.accept=o.accept.split(/,/).map((r=>r.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`))).join(",")),e.mediaType.previews.length)){const r=o.accept.match(/[\w-]+(?=-preview)/g)||[];o.accept=r.concat(e.mediaType.previews).map((r=>`application/vnd.github.${r}-preview${e.mediaType.format?`.${e.mediaType.format}`:"+json"}`)).join(",")}return["GET","HEAD"].includes(t)?s=function(e,r){const t=/\?/.test(e)?"&":"?",s=Object.keys(r);return 0===s.length?e:e+t+s.map((e=>"q"===e?"q="+r.q.split("+").map(encodeURIComponent).join("+"):`${e}=${encodeURIComponent(r[e])}`)).join("&")}(s,c):"data"in c?r=c.data:Object.keys(c).length?r=c:o["content-length"]=0,o["content-type"]||"undefined"===typeof r||(o["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(t)&&"undefined"===typeof r&&(r=""),Object.assign({method:t,url:s,headers:o},"undefined"!==typeof r?{body:r}:null,e.request?{request:e.request}:null)}function y(e,r,t){return _(d(e,r,t))}const k=function e(r,t){const s=d(r,t),o=y.bind(null,s);return Object.assign(o,{DEFAULTS:s,defaults:e.bind(null,s),merge:d.bind(null,s),parse:_})}(null,{method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":`octokit-endpoint.js/6.0.11 ${Object(i.a)()}`},mediaType:{format:"",previews:[]}});var G=t("oY9k"),O=t.n(G);class P extends Error{constructor(e){super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="Deprecation"}}var A=t("VmuJ");const R=t.n(A)()((e=>console.warn(e)));class S extends Error{constructor(e,r,t){super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="HttpError",this.status=r,Object.defineProperty(this,"code",{get:()=>(R(new P("[@octokit/request-error] `error.code` is deprecated, use `error.status`.")),r)}),this.headers=t.headers||{};const s=Object.assign({},t.request);t.request.headers.authorization&&(s.headers=Object.assign({},t.request.headers,{authorization:t.request.headers.authorization.replace(/ .*$/," [REDACTED]")})),s.url=s.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=s}}function F(e){(p(e.body)||Array.isArray(e.body))&&(e.body=JSON.stringify(e.body));let r,t,s={};return(e.request&&e.request.fetch||O.a)(e.url,Object.assign({method:e.method,body:e.body,headers:e.headers,redirect:e.redirect},e.request)).then((o=>{t=o.url,r=o.status;for(const e of o.headers)s[e[0]]=e[1];if(204===r||205===r)return;if("HEAD"===e.method){if(r<400)return;throw new S(o.statusText,r,{headers:s,request:e})}if(304===r)throw new S("Not modified",r,{headers:s,request:e});if(r>=400)return o.text().then((t=>{const o=new S(t,r,{headers:s,request:e});try{let e=JSON.parse(o.message);Object.assign(o,e);let r=e.errors;o.message=o.message+": "+r.map(JSON.stringify).join(", ")}catch(n){}throw o}));const n=o.headers.get("content-type");return/application\/json/.test(n)?o.json():!n||/^text\/|charset=utf-8$/.test(n)?o.text():function(e){return e.arrayBuffer()}(o)})).then((e=>({status:r,url:t,headers:s,data:e}))).catch((r=>{if(r instanceof S)throw r;throw new S(r.message,500,{headers:s,request:e})}))}const j=function e(r,t){const s=r.defaults(t);return Object.assign((function(r,t){const o=s.merge(r,t);if(!o.request||!o.request.hook)return F(s.parse(o));const n=(e,r)=>F(s.parse(s.merge(e,r)));return Object.assign(n,{endpoint:s,defaults:e.bind(null,s)}),o.request.hook(n,o)}),{endpoint:s,defaults:e.bind(null,s)})}(k,{headers:{"user-agent":`octokit-request.js/5.4.14 ${Object(i.a)()}`}});class C extends Error{constructor(e,r){super(r.data.errors[0].message),Object.assign(this,r.data),Object.assign(this,{headers:r.headers}),this.name="GraphqlError",this.request=e,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}}const U=["method","baseUrl","url","headers","request","query","mediaType"],D=/\/api\/v3\/?$/;function L(e,r){const t=e.defaults(r);return Object.assign(((e,r)=>function(e,r,t){if("string"===typeof r&&t&&"query"in t)return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));const s="string"===typeof r?Object.assign({query:r},t):r,o=Object.keys(s).reduce(((e,r)=>U.includes(r)?(e[r]=s[r],e):(e.variables||(e.variables={}),e.variables[r]=s[r],e)),{}),n=s.baseUrl||e.endpoint.DEFAULTS.baseUrl;return D.test(n)&&(o.url=n.replace(D,"/api/graphql")),e(o).then((e=>{if(e.data.errors){const r={};for(const t of Object.keys(e.headers))r[t]=e.headers[t];throw new C(o,{headers:r,data:e.data})}return e.data.data}))}(t,e,r)),{defaults:L.bind(null,t),endpoint:j.endpoint})}L(j,{headers:{"user-agent":`octokit-graphql.js/4.6.0 ${Object(i.a)()}`},method:"POST",url:"/graphql"});async function q(e){const r=3===e.split(/\./).length?"app":/^v\d+\./.test(e)?"installation":"oauth";return{type:"token",token:e,tokenType:r}}async function I(e,r,t,s){const o=r.endpoint.merge(t,s);return o.headers.authorization=function(e){return 3===e.split(/\./).length?`bearer ${e}`:`token ${e}`}(e),r(o)}const x="3.2.5";class H{constructor(e={}){const r=new a.Collection,t={baseUrl:j.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},e.request,{hook:r.bind(null,"request")}),mediaType:{previews:[],format:""}};var s;if(t.headers["user-agent"]=[e.userAgent,`octokit-core.js/3.2.5 ${Object(i.a)()}`].filter(Boolean).join(" "),e.baseUrl&&(t.baseUrl=e.baseUrl),e.previews&&(t.mediaType.previews=e.previews),e.timeZone&&(t.headers["time-zone"]=e.timeZone),this.request=j.defaults(t),this.graphql=(s=this.request,L(s,{method:"POST",url:"/graphql"})).defaults(t),this.log=Object.assign({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console)},e.log),this.hook=r,e.authStrategy){const{authStrategy:t,...s}=e,o=t(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:s},e.auth));r.wrap("request",o.hook),this.auth=o}else if(e.auth){const t=function(e){if(!e)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if("string"!==typeof e)throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return e=e.replace(/^(token|bearer) +/i,""),Object.assign(q.bind(null,e),{hook:I.bind(null,e)})}(e.auth);r.wrap("request",t.hook),this.auth=t}else this.auth=async()=>({type:"unauthenticated"});this.constructor.plugins.forEach((r=>{Object.assign(this,r(this,e))}))}static defaults(e){return class extends(this){constructor(...r){const t=r[0]||{};super("function"!==typeof e?Object.assign({},e,t,t.userAgent&&e.userAgent?{userAgent:`${t.userAgent} ${e.userAgent}`}:null):e(t))}}}static plugin(...e){var r;const t=this.plugins;return(r=class extends(this){}).plugins=t.concat(e.filter((e=>!t.includes(e)))),r}}H.VERSION=x,H.plugins=[];function W(e){e.hook.wrap("request",((r,t)=>{e.log.debug("request",t);const s=Date.now(),o=e.request.endpoint.parse(t),n=o.url.replace(t.baseUrl,"");return r(t).then((r=>(e.log.info(`${o.method} ${n} - ${r.status} in ${Date.now()-s}ms`),r))).catch((r=>{throw e.log.info(`${o.method} ${n} - ${r.status} in ${Date.now()-s}ms`),r}))}))}W.VERSION="1.0.3";function z(e,r,t){const s="function"===typeof r?r.endpoint(t):e.request.endpoint(r,t),o="function"===typeof r?r:e.request,n=s.method,i=s.headers;let a=s.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!a)return{done:!0};const e=function(e){if(!("total_count"in e.data)||"url"in e.data)return e;const r=e.data.incomplete_results,t=e.data.repository_selection,s=e.data.total_count;delete e.data.incomplete_results,delete e.data.repository_selection,delete e.data.total_count;const o=Object.keys(e.data)[0],n=e.data[o];return e.data=n,"undefined"!==typeof r&&(e.data.incomplete_results=r),"undefined"!==typeof t&&(e.data.repository_selection=t),e.data.total_count=s,e}(await o({method:n,url:a,headers:i}));return a=((e.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1],{value:e}}})}}function B(e,r,t,s){return"function"===typeof t&&(s=t,t=void 0),M(e,[],z(e,r,t)[Symbol.asyncIterator](),s)}function M(e,r,t,s){return t.next().then((o=>{if(o.done)return r;let n=!1;return r=r.concat(s?s(o.value,(function(){n=!0})):o.value.data),n?r:M(e,r,t,s)}))}Object.assign(B,{iterator:z});function V(e){return{paginate:Object.assign(B.bind(null,e),{iterator:z.bind(null,e)})}}V.VERSION="2.11.0";const $={actions:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createOrUpdateEnvironmentSecret:["PUT /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteEnvironmentSecret:["DELETE /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getEnvironmentPublicKey:["GET /repositories/{repository_id}/environments/{environment_name}/secrets/public-key"],getEnvironmentSecret:["GET /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getPendingDeploymentsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getReviewsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listEnvironmentSecrets:["GET /repositories/{repository_id}/environments/{environment_name}/secrets"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],reviewPendingDeploymentsForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createContentAttachment:["POST /content_references/{content_reference_id}/attachments",{mediaType:{previews:["corsair"]}}],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],scopeToken:["POST /applications/{client_id}/token/scoped"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{deleteAnalysis:["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],getAnalysis:["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],getSarif:["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listAlertsInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct",{mediaType:{previews:["scarlet-witch"]}}],getConductCode:["GET /codes_of_conduct/{key}",{mediaType:{previews:["scarlet-witch"]}}],getForRepo:["GET /repos/{owner}/{repo}/community/code_of_conduct",{mediaType:{previews:["scarlet-witch"]}}]},emojis:{get:["GET /emojis"]},enterpriseAdmin:{disableSelectedOrganizationGithubActionsEnterprise:["DELETE /enterprises/{enterprise}/actions/permissions/organizations/{org_id}"],enableSelectedOrganizationGithubActionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/organizations/{org_id}"],getAllowedActionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions/selected-actions"],getGithubActionsPermissionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions"],listSelectedOrganizationsEnabledGithubActionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions/organizations"],setAllowedActionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/selected-actions"],setGithubActionsPermissionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions"],setSelectedOrganizationsEnabledGithubActionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/organizations"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},interactions:{getRestrictionsForAuthenticatedUser:["GET /user/interaction-limits"],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits",{},{renamed:["interactions","getRestrictionsForAuthenticatedUser"]}],removeRestrictionsForAuthenticatedUser:["DELETE /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits",{},{renamed:["interactions","removeRestrictionsForAuthenticatedUser"]}],setRestrictionsForAuthenticatedUser:["PUT /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits",{},{renamed:["interactions","setRestrictionsForAuthenticatedUser"]}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline",{mediaType:{previews:["mockingbird"]}}],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{cancelImport:["DELETE /repos/{owner}/{repo}/import"],deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],getCommitAuthors:["GET /repos/{owner}/{repo}/import/authors"],getImportStatus:["GET /repos/{owner}/{repo}/import"],getLargeFiles:["GET /repos/{owner}/{repo}/import/large_files"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}",{mediaType:{previews:["wyandotte"]}}],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}",{mediaType:{previews:["wyandotte"]}}],listForAuthenticatedUser:["GET /user/migrations",{mediaType:{previews:["wyandotte"]}}],listForOrg:["GET /orgs/{org}/migrations",{mediaType:{previews:["wyandotte"]}}],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories",{mediaType:{previews:["wyandotte"]}}],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{mediaType:{previews:["wyandotte"]}}],mapCommitAuthor:["PATCH /repos/{owner}/{repo}/import/authors/{author_id}"],setLfsPreference:["PATCH /repos/{owner}/{repo}/import/lfs"],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],startImport:["PUT /repos/{owner}/{repo}/import"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock",{mediaType:{previews:["wyandotte"]}}],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock",{mediaType:{previews:["wyandotte"]}}],updateImport:["PATCH /repos/{owner}/{repo}/import"]},orgs:{blockUser:["PUT /orgs/{org}/blocks/{username}"],cancelInvitation:["DELETE /orgs/{org}/invitations/{invitation_id}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createInvitation:["POST /orgs/{org}/invitations"],createWebhook:["POST /orgs/{org}/hooks"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],get:["GET /orgs/{org}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listBlockedUsers:["GET /orgs/{org}/blocks"],listFailedInvitations:["GET /orgs/{org}/failed_invitations"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listWebhooks:["GET /orgs/{org}/hooks"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},packages:{deletePackageForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}"],deletePackageForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],deletePackageVersionForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getAllPackageVersionsForAPackageOwnedByAnOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions"],getPackageForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}"],getPackageForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}"],getPackageForUser:["GET /users/{username}/packages/{package_type}/{package_name}"],getPackageVersionForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],restorePackageForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/restore"],restorePackageForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/restore"],restorePackageVersionForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}",{mediaType:{previews:["inertia"]}}],createCard:["POST /projects/columns/{column_id}/cards",{mediaType:{previews:["inertia"]}}],createColumn:["POST /projects/{project_id}/columns",{mediaType:{previews:["inertia"]}}],createForAuthenticatedUser:["POST /user/projects",{mediaType:{previews:["inertia"]}}],createForOrg:["POST /orgs/{org}/projects",{mediaType:{previews:["inertia"]}}],createForRepo:["POST /repos/{owner}/{repo}/projects",{mediaType:{previews:["inertia"]}}],delete:["DELETE /projects/{project_id}",{mediaType:{previews:["inertia"]}}],deleteCard:["DELETE /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],deleteColumn:["DELETE /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}],get:["GET /projects/{project_id}",{mediaType:{previews:["inertia"]}}],getCard:["GET /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],getColumn:["GET /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission",{mediaType:{previews:["inertia"]}}],listCards:["GET /projects/columns/{column_id}/cards",{mediaType:{previews:["inertia"]}}],listCollaborators:["GET /projects/{project_id}/collaborators",{mediaType:{previews:["inertia"]}}],listColumns:["GET /projects/{project_id}/columns",{mediaType:{previews:["inertia"]}}],listForOrg:["GET /orgs/{org}/projects",{mediaType:{previews:["inertia"]}}],listForRepo:["GET /repos/{owner}/{repo}/projects",{mediaType:{previews:["inertia"]}}],listForUser:["GET /users/{username}/projects",{mediaType:{previews:["inertia"]}}],moveCard:["POST /projects/columns/cards/{card_id}/moves",{mediaType:{previews:["inertia"]}}],moveColumn:["POST /projects/columns/{column_id}/moves",{mediaType:{previews:["inertia"]}}],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}",{mediaType:{previews:["inertia"]}}],update:["PATCH /projects/{project_id}",{mediaType:{previews:["inertia"]}}],updateCard:["PATCH /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],updateColumn:["PATCH /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch",{mediaType:{previews:["lydian"]}}],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteLegacy:["DELETE /reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}},{deprecated:"octokit.reactions.deleteLegacy() is deprecated, see https://docs.github.com/rest/reference/reactions/#delete-a-reaction-legacy"}],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateEnvironment:["PUT /repos/{owner}/{repo}/environments/{environment_name}"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createPagesSite:["POST /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}}],createRelease:["POST /repos/{owner}/{repo}/releases"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate",{mediaType:{previews:["baptiste"]}}],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteAnEnvironment:["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}}],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes",{mediaType:{previews:["london"]}}],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes",{mediaType:{previews:["london"]}}],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllEnvironments:["GET /repos/{owner}/{repo}/environments"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}}],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getEnvironment:["GET /repos/{owner}/{repo}/environments/{environment_name}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head",{mediaType:{previews:["groot"]}}],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls",{mediaType:{previews:["groot"]}}],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],renameBranch:["POST /repos/{owner}/{repo}/branches/{branch}/rename"],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}}],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits",{mediaType:{previews:["cloak"]}}],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics",{mediaType:{previews:["mercy"]}}],users:["GET /search/users"]},secretScanning:{getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}}],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}}],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects",{mediaType:{previews:["inertia"]}}],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys"],deleteEmailForAuthenticated:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}"],list:["GET /users"],listBlockedByAuthenticated:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}};function N(e,r,t,s,o){const n=e.request.defaults(s);return Object.assign((function(...s){let i=n.endpoint.merge(...s);if(o.mapToData)return i=Object.assign({},i,{data:i[o.mapToData],[o.mapToData]:void 0}),n(i);if(o.renamed){const[s,n]=o.renamed;e.log.warn(`octokit.${r}.${t}() has been renamed to octokit.${s}.${n}()`)}if(o.deprecated&&e.log.warn(o.deprecated),o.renamedParameters){const i=n.endpoint.merge(...s);for(const[s,n]of Object.entries(o.renamedParameters))s in i&&(e.log.warn(`"${s}" parameter is deprecated for "octokit.${r}.${t}()". Use "${n}" instead`),n in i||(i[n]=i[s]),delete i[s]);return n(i)}return n(...s)}),n)}function K(e){return function(e,r){const t={};for(const[s,o]of Object.entries(r))for(const[r,n]of Object.entries(o)){const[o,i,a]=n,[c,p]=o.split(/ /),u=Object.assign({method:c,url:p},i);t[s]||(t[s]={});const l=t[s];l[r]=a?N(e,s,r,u,a):e.request.defaults(u)}return t}(e,$)}K.VERSION="4.13.4";const J=H.plugin(W,K,V).defaults({userAgent:"octokit-rest.js/18.3.4"});var Y=t("q1tI"),Z=Object.prototype.hasOwnProperty;var X=new WeakMap,Q=0;var ee={isOnline:function(){return"undefined"===typeof navigator||"undefined"===typeof navigator.onLine||navigator.onLine},isDocumentVisible:function(){return"undefined"===typeof document||"undefined"===typeof document.visibilityState||"hidden"!==document.visibilityState},fetcher:function(e){return fetch(e).then((function(e){return e.json()}))}},re=new(function(){function e(e){void 0===e&&(e={}),this.__cache=new Map(Object.entries(e)),this.__listeners=[]}return e.prototype.get=function(e){var r=this.serializeKey(e)[0];return this.__cache.get(r)},e.prototype.set=function(e,r){var t=this.serializeKey(e)[0];this.__cache.set(t,r),this.notify()},e.prototype.keys=function(){return Array.from(this.__cache.keys())},e.prototype.has=function(e){var r=this.serializeKey(e)[0];return this.__cache.has(r)},e.prototype.clear=function(){this.__cache.clear(),this.notify()},e.prototype.delete=function(e){var r=this.serializeKey(e)[0];this.__cache.delete(r),this.notify()},e.prototype.serializeKey=function(e){var r=null;if("function"===typeof e)try{e=e()}catch(t){e=""}return Array.isArray(e)?(r=e,e=function(e){if(!e.length)return"";for(var r="arg",t=0;t<e.length;++t)if(null!==e[t]){var s=void 0;"object"!==typeof e[t]&&"function"!==typeof e[t]?s="string"===typeof e[t]?'"'+e[t]+'"':String(e[t]):X.has(e[t])?s=X.get(e[t]):(s=Q,X.set(e[t],Q++)),r+="@"+s}else r+="@null";return r}(e)):e=String(e||""),[e,r,e?"err@"+e:"",e?"validating@"+e:""]},e.prototype.subscribe=function(e){var r=this;if("function"!==typeof e)throw new Error("Expected the listener to be a function.");var t=!0;return this.__listeners.push(e),function(){if(t){t=!1;var s=r.__listeners.indexOf(e);s>-1&&(r.__listeners[s]=r.__listeners[r.__listeners.length-1],r.__listeners.length--)}}},e.prototype.notify=function(){for(var e=0,r=this.__listeners;e<r.length;e++){(0,r[e])()}},e}());var te="undefined"!==typeof window&&navigator.connection&&-1!==["slow-2g","2g"].indexOf(navigator.connection.effectiveType),se={onLoadingSlow:function(){},onSuccess:function(){},onError:function(){},onErrorRetry:function(e,r,t,s,o){if(t.isDocumentVisible()&&!("number"===typeof t.errorRetryCount&&o.retryCount>t.errorRetryCount)){var n=Math.min(o.retryCount||0,8),i=~~((Math.random()+.5)*(1<<n))*t.errorRetryInterval;setTimeout(s,i,o)}},errorRetryInterval:1e3*(te?10:5),focusThrottleInterval:5e3,dedupingInterval:2e3,loadingTimeout:1e3*(te?5:3),refreshInterval:0,revalidateOnFocus:!0,revalidateOnReconnect:!0,refreshWhenHidden:!1,refreshWhenOffline:!1,shouldRetryOnError:!0,suspense:!1,compare:function e(r,t){var s,o;if(r===t)return!0;if(r&&t&&(s=r.constructor)===t.constructor){if(s===Date)return r.getTime()===t.getTime();if(s===RegExp)return r.toString()===t.toString();if(s===Array){if((o=r.length)===t.length)for(;o--&&e(r[o],t[o]););return-1===o}if(!s||"object"===typeof r){for(s in o=0,r){if(Z.call(r,s)&&++o&&!Z.call(t,s))return!1;if(!(s in t)||!e(r[s],t[s]))return!1}return Object.keys(t).length===o}}return r!==r&&t!==t},fetcher:ee.fetcher,isOnline:ee.isOnline,isDocumentVisible:ee.isDocumentVisible,isPaused:function(){return!1}},oe=Object(Y.createContext)({});oe.displayName="SWRConfigContext";var ne=oe,ie=function(e,r,t,s){return new(t||(t=Promise))((function(o,n){function i(e){try{c(s.next(e))}catch(r){n(r)}}function a(e){try{c(s.throw(e))}catch(r){n(r)}}function c(e){var r;e.done?o(e.value):(r=e.value,r instanceof t?r:new t((function(e){e(r)}))).then(i,a)}c((s=s.apply(e,r||[])).next())}))},ae=function(e,r){var t,s,o,n,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return n={next:a(0),throw:a(1),return:a(2)},"function"===typeof Symbol&&(n[Symbol.iterator]=function(){return this}),n;function a(n){return function(a){return function(n){if(t)throw new TypeError("Generator is already executing.");for(;i;)try{if(t=1,s&&(o=2&n[0]?s.return:n[0]?s.throw||((o=s.return)&&o.call(s),0):s.next)&&!(o=o.call(s,n[1])).done)return o;switch(s=0,o&&(n=[2&n[0],o.value]),n[0]){case 0:case 1:o=n;break;case 4:return i.label++,{value:n[1],done:!1};case 5:i.label++,s=n[1],n=[0];continue;case 7:n=i.ops.pop(),i.trys.pop();continue;default:if(!(o=(o=i.trys).length>0&&o[o.length-1])&&(6===n[0]||2===n[0])){i=0;continue}if(3===n[0]&&(!o||n[1]>o[0]&&n[1]<o[3])){i.label=n[1];break}if(6===n[0]&&i.label<o[1]){i.label=o[1],o=n;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(n);break}o[2]&&i.ops.pop(),i.trys.pop();continue}n=r.call(e,i)}catch(a){n=[6,a],s=0}finally{t=o=0}if(5&n[0])throw n[1];return{value:n[0]?n[1]:void 0,done:!0}}([n,a])}}},ce="undefined"===typeof window||!!("undefined"!==typeof Deno&&Deno&&Deno.version&&Deno.version.deno),pe=ce?null:window.requestAnimationFrame||function(e){return setTimeout(e,1)},ue=ce?Y.useEffect:Y.useLayoutEffect,le={},de={},me={},ge={},Te={},he={},fe={},Ee=function(){var e=0;return function(){return++e}}();if(!ce&&window.addEventListener&&"undefined"!==typeof document&&"undefined"!==typeof document.addEventListener){var we=function(e){if(se.isDocumentVisible()&&se.isOnline())for(var r in e)e[r][0]&&e[r][0]()};document.addEventListener("visibilitychange",(function(){return we(me)}),!1),window.addEventListener("focus",(function(){return we(me)}),!1),window.addEventListener("online",(function(){return we(ge)}),!1)}var be=function(e,r){void 0===r&&(r=!0);var t=re.serializeKey(e),s=t[0],o=t[2],n=t[3];if(!s)return Promise.resolve();var i=Te[s];if(s&&i){for(var a=re.get(s),c=re.get(o),p=re.get(n),u=[],l=0;l<i.length;++l)u.push(i[l](r,a,c,p,l>0));return Promise.all(u).then((function(){return re.get(s)}))}return Promise.resolve(re.get(s))},ve=function(e,r,t,s){var o=Te[e];if(e&&o)for(var n=0;n<o.length;++n)o[n](!1,r,t,s)},_e=function(e,r,t){return void 0===t&&(t=!0),ie(void 0,void 0,void 0,(function(){var s,o,n,i,a,c,p,u,l,d,m,g,T;return ae(this,(function(h){switch(h.label){case 0:if(s=re.serializeKey(e),o=s[0],n=s[2],!o)return[2];if("undefined"===typeof r)return[2,be(e,t)];if(he[o]=Ee()-1,fe[o]=0,i=he[o],a=de[o],u=!1,r&&"function"===typeof r)try{r=r(re.get(o))}catch(f){p=f}if(!r||"function"!==typeof r.then)return[3,5];u=!0,h.label=1;case 1:return h.trys.push([1,3,,4]),[4,r];case 2:return c=h.sent(),[3,4];case 3:return l=h.sent(),p=l,[3,4];case 4:return[3,6];case 5:c=r,h.label=6;case 6:return(d=function(){if(i!==he[o]||a!==de[o]){if(p)throw p;return!0}})()?[2,c]:("undefined"!==typeof c&&re.set(o,c),re.set(n,p),fe[o]=Ee()-1,u?[3,8]:[4,0]);case 7:if(h.sent(),d())return[2,c];h.label=8;case 8:if(m=Te[o]){for(g=[],T=0;T<m.length;++T)g.push(m[T](!!t,c,p,void 0,T>0));return[2,Promise.all(g).then((function(){if(p)throw p;return re.get(o)}))]}if(p)throw p;return[2,c]}}))}))};ne.Provider;var ye=function(){for(var e=this,r=[],t=0;t<arguments.length;t++)r[t]=arguments[t];var s,o,n={};r.length>=1&&(s=r[0]),r.length>2?(o=r[1],n=r[2]):"function"===typeof r[1]?o=r[1]:"object"===typeof r[1]&&(n=r[1]);var i=re.serializeKey(s),a=i[0],c=i[1],p=i[2],u=i[3];n=Object.assign({},se,Object(Y.useContext)(ne),n);var l=Object(Y.useRef)(n);ue((function(){l.current=n})),"undefined"===typeof o&&(o=n.fetcher);var d=function(){var e=re.get(a);return"undefined"===typeof e?n.initialData:e},m=d(),g=re.get(p),T=!!re.get(u),h=Object(Y.useRef)({data:!1,error:!1,isValidating:!1}),f=Object(Y.useRef)({data:m,error:g,isValidating:T});Object(Y.useDebugValue)(f.current.data);var E=Object(Y.useState)(null),w=E[1],b=Object(Y.useCallback)((function(e){var r=!1;for(var t in e)f.current[t]!==e[t]&&(f.current[t]=e[t],h.current[t]&&(r=!0));if(r||n.suspense){if(v.current||!y.current)return;w({})}}),[]),v=Object(Y.useRef)(!1),_=Object(Y.useRef)(a),y=Object(Y.useRef)(!1),k=Object(Y.useCallback)((function(e){for(var r,t=[],s=1;s<arguments.length;s++)t[s-1]=arguments[s];v.current||y.current&&a===_.current&&(r=l.current)[e].apply(r,t)}),[a]),G=Object(Y.useCallback)((function(e,r){return _e(_.current,e,r)}),[]),O=function(e,r){r&&(e[a]?e[a].push(r):e[a]=[r])},P=function(e,r){if(e[a]){var t=e[a],s=t.indexOf(r);s>=0&&(t[s]=t[t.length-1],t.pop())}},A=Object(Y.useCallback)((function(r){return void 0===r&&(r={}),ie(e,void 0,void 0,(function(){var e,t,s,i,d,m,g;return ae(this,(function(T){switch(T.label){case 0:if(!a||!o)return[2,!1];if(v.current)return[2,!1];if(l.current.isPaused())return[2,!1];r=Object.assign({dedupe:!1},r),e=!0,t="undefined"!==typeof le[a]&&r.dedupe,T.label=1;case 1:return T.trys.push([1,6,,7]),b({isValidating:!0}),re.set(u,!0),t||ve(a,f.current.data,f.current.error,!0),s=void 0,i=void 0,t?(i=de[a],[4,le[a]]):[3,3];case 2:return s=T.sent(),[3,5];case 3:return n.loadingTimeout&&!re.get(a)&&setTimeout((function(){e&&k("onLoadingSlow",a,n)}),n.loadingTimeout),le[a]=null!==c?o.apply(void 0,c):o(a),de[a]=i=Ee(),[4,le[a]];case 4:s=T.sent(),setTimeout((function(){delete le[a],delete de[a]}),n.dedupingInterval),k("onSuccess",s,a,n),T.label=5;case 5:return de[a]>i?[2,!1]:he[a]&&(i<=he[a]||i<=fe[a]||0===fe[a])?(b({isValidating:!1}),[2,!1]):(re.set(a,s),re.set(p,void 0),re.set(u,!1),d={isValidating:!1},"undefined"!==typeof f.current.error&&(d.error=void 0),n.compare(f.current.data,s)||(d.data=s),b(d),t||ve(a,s,d.error,!1),[3,7]);case 6:return m=T.sent(),delete le[a],delete de[a],l.current.isPaused()?(b({isValidating:!1}),[2,!1]):(re.set(p,m),f.current.error!==m&&(b({isValidating:!1,error:m}),t||ve(a,void 0,m,!1)),k("onError",m,a,n),n.shouldRetryOnError&&(g=(r.retryCount||0)+1,k("onErrorRetry",m,a,n,A,Object.assign({dedupe:!0},r,{retryCount:g}))),[3,7]);case 7:return e=!1,[2,!0]}}))}))}),[a]);ue((function(){if(a){v.current=!1,y.current=!0;var e=f.current.data,r=d();_.current!==a&&(_.current=a),n.compare(e,r)||b({data:r});var t=function(){return A({dedupe:!0})};(n.revalidateOnMount||!n.initialData&&void 0===n.revalidateOnMount)&&("undefined"===typeof r||ce?t():pe(t));var s=!1,o=function(){!s&&l.current.revalidateOnFocus&&(s=!0,t(),setTimeout((function(){return s=!1}),l.current.focusThrottleInterval))},i=function(){l.current.revalidateOnReconnect&&t()},c=function(e,r,s,o,i){void 0===e&&(e=!0),void 0===i&&(i=!0);var a={},c=!1;return"undefined"===typeof r||n.compare(f.current.data,r)||(a.data=r,c=!0),f.current.error!==s&&(a.error=s,c=!0),"undefined"!==typeof o&&f.current.isValidating!==o&&(a.isValidating=o,c=!0),c&&b(a),!!e&&(i?t():A())};return O(me,o),O(ge,i),O(Te,c),function(){b=function(){return null},v.current=!0,P(me,o),P(ge,i),P(Te,c)}}}),[a,A]),ue((function(){var r=null,t=function(){return ie(e,void 0,void 0,(function(){return ae(this,(function(e){switch(e.label){case 0:return f.current.error||!l.current.refreshWhenHidden&&!l.current.isDocumentVisible()||!l.current.refreshWhenOffline&&!l.current.isOnline()?[3,2]:[4,A({dedupe:!0})];case 1:e.sent(),e.label=2;case 2:return l.current.refreshInterval&&r&&(r=setTimeout(t,l.current.refreshInterval)),[2]}}))}))};return l.current.refreshInterval&&(r=setTimeout(t,l.current.refreshInterval)),function(){r&&(clearTimeout(r),r=null)}}),[n.refreshInterval,n.refreshWhenHidden,n.refreshWhenOffline,A]);var R=Object(Y.useMemo)((function(){var e={revalidate:A,mutate:G};return Object.defineProperties(e,{error:{get:function(){return h.current.error=!0,_.current===a?f.current.error:g},enumerable:!0},data:{get:function(){return h.current.data=!0,_.current===a?f.current.data:m},enumerable:!0},isValidating:{get:function(){return h.current.isValidating=!0,!!a&&f.current.isValidating},enumerable:!0}}),e}),[A,m,g,G,a]);if(n.suspense){var S=re.get(a),F=re.get(p);if("undefined"===typeof S&&(S=m),"undefined"===typeof F&&(F=g),"undefined"===typeof S&&"undefined"===typeof F){if(le[a]||A(),le[a]&&"function"===typeof le[a].then)throw le[a];S=le[a]}if("undefined"===typeof S&&F)throw F;return{error:F,data:S,revalidate:A,mutate:G,isValidating:f.current.isValidating}}return R};var ke=ye,Ge=t("YFqc"),Oe=t.n(Ge);new J;function Pe(){var e=ke("https://api.github.com/users/ibveecnk/repos"),r=e.data;return e.error?Object(s.jsx)("div",{children:"failed to load"}):r?"https://docs.github.com/rest/overview/resources-in-the-rest-api#rate-limiting"==r.documentation_url?Object(s.jsx)("div",{children:"You have been ratelimited by GitHub, please check back later."}):Object(s.jsx)("ul",{className:"flex-container",children:r.map((function(e,r){return Object(s.jsxs)("li",{className:"flex-item",children:[Object(s.jsx)(Oe.a,{href:e.html_url,children:Object(s.jsx)("a",{children:e.name})}),e.description?Object(s.jsx)("div",{children:e.description}):""]},r)}))}):Object(s.jsx)("div",{children:"loading..."})}function Ae(){return Object(s.jsxs)("div",{className:"Wrapper",children:[Object(s.jsx)(o.a,{page:"projects"}),Object(s.jsxs)("div",{className:"cWrapper",children:[Object(s.jsx)(n.a,{text:"Projects"}),Pe()]})]})}},VmuJ:function(e,r,t){var s=t("1jOq");function o(e){var r=function(){return r.called?r.value:(r.called=!0,r.value=e.apply(this,arguments))};return r.called=!1,r}function n(e){var r=function(){if(r.called)throw new Error(r.onceError);return r.called=!0,r.value=e.apply(this,arguments)},t=e.name||"Function wrapped with `once`";return r.onceError=t+" shouldn't be called more than once",r.called=!1,r}e.exports=s(o),e.exports.strict=s(n),o.proto=o((function(){Object.defineProperty(Function.prototype,"once",{value:function(){return o(this)},configurable:!0}),Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return n(this)},configurable:!0})}))},YFqc:function(e,r,t){e.exports=t("cTJO")},Z8pk:function(e,r,t){var s=t("5uH7"),o=t("EUoV"),n=t("R+3T"),i=Function.bind,a=i.bind(i);function c(e,r,t){var s=a(n,null).apply(null,t?[r,t]:[r]);e.api={remove:s},e.remove=s,["before","error","after","wrap"].forEach((function(s){var n=t?[r,s,t]:[r,s];e[s]=e.api[s]=a(o,null).apply(null,n)}))}function p(){var e={registry:{}},r=s.bind(null,e);return c(r,e),r}var u=!1;function l(){return u||(console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4'),u=!0),p()}l.Singular=function(){var e={registry:{}},r=s.bind(null,e,"h");return c(r,e,"h"),r}.bind(),l.Collection=p.bind(),e.exports=l,e.exports.Hook=l,e.exports.Singular=l.Singular,e.exports.Collection=l.Collection},ZHh6:function(e,r,t){"use strict";var s=t("nKUr"),o=t("YFqc"),n=t.n(o);r.a=function(e){var r=e.page;return Object(s.jsx)("header",{id:"header",children:Object(s.jsx)("div",{className:"center",children:Object(s.jsx)("nav",{id:"mainNav",children:Object(s.jsxs)("ul",{className:"navContainer",children:[Object(s.jsx)("li",{children:Object(s.jsx)(n.a,{href:"/",children:Object(s.jsx)("a",{className:"mainName",children:Object(s.jsx)("b",{children:Object(s.jsx)("i",{children:"ibveecnk"})})})})}),Object(s.jsx)("li",{className:"projects"==r?"active":"",children:Object(s.jsx)(n.a,{href:"/projects",children:Object(s.jsx)("a",{children:"projects"})})})]})})})})}},cTJO:function(e,r,t){"use strict";var s=t("J4zp"),o=t("284h");r.__esModule=!0,r.default=void 0;var n=o(t("q1tI")),i=t("elyg"),a=t("nOHt"),c=t("vNVm"),p={};function u(e,r,t,s){if(e&&(0,i.isLocalURL)(r)){e.prefetch(r,t,s).catch((function(e){0}));var o=s&&"undefined"!==typeof s.locale?s.locale:e&&e.locale;p[r+"%"+t+(o?"%"+o:"")]=!0}}var l=function(e){var r=!1!==e.prefetch,t=(0,a.useRouter)(),o=t&&t.pathname||"/",l=n.default.useMemo((function(){var r=(0,i.resolveHref)(o,e.href,!0),t=s(r,2),n=t[0],a=t[1];return{href:n,as:e.as?(0,i.resolveHref)(o,e.as):a||n}}),[o,e.href,e.as]),d=l.href,m=l.as,g=e.children,T=e.replace,h=e.shallow,f=e.scroll,E=e.locale;"string"===typeof g&&(g=n.default.createElement("a",null,g));var w=n.Children.only(g),b=w&&"object"===typeof w&&w.ref,v=(0,c.useIntersection)({rootMargin:"200px"}),_=s(v,2),y=_[0],k=_[1],G=n.default.useCallback((function(e){y(e),b&&("function"===typeof b?b(e):"object"===typeof b&&(b.current=e))}),[b,y]);(0,n.useEffect)((function(){var e=k&&r&&(0,i.isLocalURL)(d),s="undefined"!==typeof E?E:t&&t.locale,o=p[d+"%"+m+(s?"%"+s:"")];e&&!o&&u(t,d,m,{locale:s})}),[m,d,k,E,r,t]);var O={ref:G,onClick:function(e){w.props&&"function"===typeof w.props.onClick&&w.props.onClick(e),e.defaultPrevented||function(e,r,t,s,o,n,a,c){("A"!==e.currentTarget.nodeName||!function(e){var r=e.currentTarget.target;return r&&"_self"!==r||e.metaKey||e.ctrlKey||e.shiftKey||e.altKey||e.nativeEvent&&2===e.nativeEvent.which}(e)&&(0,i.isLocalURL)(t))&&(e.preventDefault(),null==a&&(a=s.indexOf("#")<0),r[o?"replace":"push"](t,s,{shallow:n,locale:c,scroll:a}).then((function(e){e&&a&&document.body.focus()})))}(e,t,d,m,T,h,f,E)},onMouseEnter:function(e){(0,i.isLocalURL)(d)&&(w.props&&"function"===typeof w.props.onMouseEnter&&w.props.onMouseEnter(e),u(t,d,m,{priority:!0}))}};if(e.passHref||"a"===w.type&&!("href"in w.props)){var P="undefined"!==typeof E?E:t&&t.locale,A=t&&t.isLocaleDomain&&(0,i.getDomainLocale)(m,P,t&&t.locales,t&&t.domainLocales);O.href=A||(0,i.addBasePath)((0,i.addLocale)(m,P,t&&t.defaultLocale))}return n.default.cloneElement(w,O)};r.default=l},oY9k:function(e,r,t){"use strict";var s=function(){if("undefined"!==typeof self)return self;if("undefined"!==typeof window)return window;if("undefined"!==typeof s)return s;throw new Error("unable to locate global object")}();e.exports=r=s.fetch,s.fetch&&(r.default=s.fetch.bind(s)),r.Headers=s.Headers,r.Request=s.Request,r.Response=s.Response},vNVm:function(e,r,t){"use strict";var s=t("J4zp");r.__esModule=!0,r.useIntersection=function(e){var r=e.rootMargin,t=e.disabled||!i,c=(0,o.useRef)(),p=(0,o.useState)(!1),u=s(p,2),l=u[0],d=u[1],m=(0,o.useCallback)((function(e){c.current&&(c.current(),c.current=void 0),t||l||e&&e.tagName&&(c.current=function(e,r,t){var s=function(e){var r=e.rootMargin||"",t=a.get(r);if(t)return t;var s=new Map,o=new IntersectionObserver((function(e){e.forEach((function(e){var r=s.get(e.target),t=e.isIntersecting||e.intersectionRatio>0;r&&t&&r(t)}))}),e);return a.set(r,t={id:r,observer:o,elements:s}),t}(t),o=s.id,n=s.observer,i=s.elements;return i.set(e,r),n.observe(e),function(){i.delete(e),n.unobserve(e),0===i.size&&(n.disconnect(),a.delete(o))}}(e,(function(e){return e&&d(e)}),{rootMargin:r}))}),[t,r,l]);return(0,o.useEffect)((function(){if(!i&&!l){var e=(0,n.requestIdleCallback)((function(){return d(!0)}));return function(){return(0,n.cancelIdleCallback)(e)}}}),[l]),[m,l]};var o=t("q1tI"),n=t("0G5g"),i="undefined"!==typeof IntersectionObserver;var a=new Map},z6pS:function(e,r,t){"use strict";(function(e){function s(){return"object"===typeof navigator&&"userAgent"in navigator?navigator.userAgent:"object"===typeof e&&"version"in e?`Node.js/${e.version.substr(1)} (${e.platform}; ${e.arch})`:"<environment undetectable>"}t.d(r,"a",(function(){return s}))}).call(this,t("8oxB"))}},[["D85t",0,2,1]]]);